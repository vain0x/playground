; クライアントアプリ

; サーバーから起動される

#packopt name "client"

#include "mod_pipe_rw.hsp"

#module

#define error(%1) logmes (%1) : dialog ("ERROR: " + (%1)), 1 : end : end
#define WM_APP 0x8000

#deffunc app_entrypoint

	title "client"

	; parse cmdline
	logmes "cmdline = " + dir_cmdline
	mes dir_cmdline
	cmdline = dir_cmdline
	split cmdline, " ", args
	input_pipe = ""
	output_pipe = ""
	server_hwnd_arg = ""
	repeat length(args)
		if strmid(args(cnt), 0, 8) == "--input=" {
			input_pipe = strmid(args(cnt), 8, 0xFFFF)
			continue
		}
		if strmid(args(cnt), 0, 9) == "--output=" {
			output_pipe = strmid(args(cnt), 9, 0xFFFF)
			continue
		}
		if strmid(args(cnt), 0, 14) == "--server-hwnd=" {
			server_hwnd_arg = strmid(args(cnt), 14, 0xFFFF)
			continue
		}
	loop

	if input_pipe == "" {
		error "WARN: --input missing"
	}
	if output_pipe == "" {
		error "WARN: --output missing"
	}
	if server_hwnd_arg == "" {
		error "WARN: --server-hwnd missing"
	}

	mes "input = " + input_pipe
	mes "output = " + output_pipe
	mes "server-hwnd = " + server_hwnd_arg

	pipe_rw_open_read input_pipe
	s_input_pipe_id = stat
	if s_input_pipe_id < 0 {
		error "WARN: input_pipe not opened"
	}
	s_input_available = true
	mes "input connected"

	pipe_rw_open_write output_pipe
	s_output_pipe_id = stat
	if s_output_pipe_id < 0 {
		error "WARN: output_pipe not opened"
	}
	s_output_available = true
	mes "output connected"

	s_server_hwnd = int(server_hwnd_arg)
	; 101: hello, lp: clinet hwnd
	mes "notify hello hwnd=" + hwnd
	sendmsg s_server_hwnd, WM_APP, 101, hwnd

	buf_size = 0x1000
	sdim buf, buf_size
	pong_count = 0
	wait_count = 0

	repeat
		if wait_count == 0 || wait_count \ 1000 == 0 {
			mes "waiting..."
		}
		wait_count++

		pipe_rw_read_block s_input_pipe_id, buf, buf_size - 1
		read_size = stat
		if read_size < 0 {
			error "read"
		}

		if read_size > 0 {
			mes "received: '" + strmid(buf, 0, read_size) + "'"

			buf = "pong: " + pong_count
			size = strlen(buf)
			pong_count++
			mes "writing: '" + buf + "' (" + size + ")"
			pipe_rw_write_block s_output_pipe_id, buf, size

			; noify written
			sendmsg s_server_hwnd, WM_APP, 102, size
		}

		await 100
	loop

	return

#global

	app_entrypoint
